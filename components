Buttons.js
const Button = ({ text, onClick, loading }) => {
  return (
    <button onClick={onClick} disabled={loading}>
      {loading ? "Processing..." : text}
    </button>
  );
};

export default Button;
TradingForm.js
import { useState } from "react";
import Button from "./Button";

const TradingForm = ({ onTrade }) => {
  const [amount, setAmount] = useState("");
  
  return (
    <div className="trading-form">
      <input type="number" value={amount} onChange={(e) => setAmount(e.target.value)} />
      <Button text="Execute Trade" onClick={() => onTrade(amount)} />
    </div>
  );
};

export default TradingForm;
TraderHistory.js
const TradeHistory = ({ history }) => {
  return (
    <div className="trade-history">
      {history.map((trade, index) => (
        <div key={index} className="trade-item">
          {trade.amount} {trade.token} - {trade.status}
        </div>
      ))}
    </div>
  );
};

export default TradeHistory;
WalletConnect.js
import { ethers } from "ethers";
import { useState } from "react";

const WalletConnect = () => {
  const [walletAddress, setWalletAddress] = useState("");

  const connectWallet = async () => {
    if (window.ethereum) {
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const accounts = await provider.send("eth_requestAccounts", []);
      setWalletAddress(accounts[0]);
    } else {
      alert("MetaMask not detected!");
    }
  };

  return (
    <div>
      <button onClick={connectWallet}>Connect Wallet</button>
      {walletAddress && <p>Connected: {walletAddress}</p>}
    </div>
  );
};

export default WalletConnect;
MarketData.js
import { useEffect, useState } from "react";
import { getMarketPrediction } from "../utils/ai-trading";

const MarketData = () => {
  const [prediction, setPrediction] = useState(null);

  useEffect(() => {
    const fetchPrediction = async () => {
      const result = await getMarketPrediction();
      setPrediction(result);
    };
    fetchPrediction();
  }, []);

  return (
    <div className="market-data">
      <h2>AI Market Prediction</h2>
      <p>{prediction ? `Trend: ${prediction}` : "Loading..."}</p>
    </div>
  );
};

export default MarketData;
SecurityAlart.js
import { detectPhishing } from "../utils/security";

const SecurityAlert = ({ url }) => {
  return (
    <div className="security-alert">
      {detectPhishing(url) ? (
        <p className="alert-danger">⚠ Warning: Possible phishing attempt detected!</p>
      ) : (
        <p className="alert-safe">✅ Safe website</p>
      )}
    </div>
  );
};

export default SecurityAlert;
